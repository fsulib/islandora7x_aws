{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "BastionHostKeyName": {
            "Type": "String",
            "Description": "The name of the private key file to use for SSH/RDP access to the bastion host."
        },
        "RestrictedInterfaceCIDR": {
            "Type": "String",
            "Description": "The CIDR range allowed to connect to Fedora and Solr.",
            "Default": "0.0.0.0/0"
        },
        "DeploymentEnvironment": {
            "Type": "String",
            "Description": "The type of environment to be deployed.",
            "Default": "Development",
            "AllowedValues": ["Development", "Testing", "Production"]
        },
        "DatabaseRootUser": {
            "Type": "String",
            "Description": "The username for the database root user."
        },
        "DatabaseRootPass": {
            "Type": "String",
            "Description": "The password for the database root user."
        },
        "DrupalDatabaseUser": {
            "Type": "String",
            "Description": "The username for the Drupal database."
        },
        "DrupalDatabasePass": {
            "Type": "String",
            "Description": "The password for the Drupal database."
        },
        "FedoraDatabaseUser": {
            "Type": "String",
            "Description": "The username for the Fedora database."
        },
        "FedoraDatabasePass": {
            "Type": "String",
            "Description": "The password for the Fedora database."
        },
        "FedoraFilterUser": {
            "Type": "String",
            "Description": "The username for the Fedora Drupal filter."
        },
        "FedoraFilterPass": {
            "Type": "String",
            "Description": "The password for the Fedora Drupal filter."
        },
        "TomcatManagerUser": {
            "Type": "String",
            "Description": "The username for the Tomcat Manager."
        },
        "TomcatManagerPass": {
            "Type": "String",
            "Description": "The password for the Tomcat Manager."
        }
    },
    "Mappings": {
        "DeploymentEnvironmentMap": {
            "Development": {
                "InstanceSize": "t2.nano"
            },
            "Testing": {
                "InstanceSize": "t2.medium"
            },
            "Production": {
                "InstanceSize": "t2.large"
            }
        },
        "AmazonLinuxAMI": {
            "us-east-1": {
                "AMI": "ami-c58c1dd3"
            },
            "us-east-2": {
                "AMI": "ami-4191b524"
            },
            "us-west-1": {
                "AMI": "ami-7a85a01a"
            },
            "us-west-2": {
                "AMI": "ami-4836a428"
            },
            "ca-central-1": {
                "AMI": "ami-0bd66a6f"
            },
            "eu-west-1": {
                "AMI": "ami-01ccc867"
            },
            "eu-west-2": {
                "AMI": "ami-b6daced2"
            },
            "eu-central-1": {
                "AMI": "ami-b968bad6"
            },
            "sa-east-1": {
                "AMI": "ami-37cfad5b"
            },
            "ap-southeast-1": {
                "AMI": "ami-fc5ae39f"
            },
            "ap-southeast-2": {
                "AMI": "ami-162c2575"
            },
            "ap-south-1": {
                "AMI": "ami-52c7b43d"
            },
            "ap-northeast-1": {
                "AMI": "ami-923d12f5"
            },
            "ap-northeast-2": {
                "AMI": "ami-9d15c7f3"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.1.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [{
                    "Key": "Name",
                    "Value": "Lab VPC"
                }]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": ["VPC", "InternetGateway"],
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.1.10.0/24",
                "MapPublicIpOnLaunch": "true",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0", {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "Public Subnet 1"
                }]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.1.50.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0", {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "Private Subnet 1"
                }]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": ["VPC", "AttachGateway"],
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "Public"
                }]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": ["PublicRouteTable", "AttachGateway"],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PublicRouteTable", "PublicSubnet1", "AttachGateway"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "Private"
                }]
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PublicRouteTable", "PrivateSubnet1", "AttachGateway"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Network",
                    "Value": "Private"
                }]
            }
        },
        "NATSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "AttachGateway",
            "Properties": {
                "GroupDescription": "Enable internal access to the NAT device",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "0",
                    "ToPort": "1024",
                    "CidrIp": "10.1.50.0/24"
                }, {
                    "IpProtocol": "udp",
                    "FromPort": "0",
                    "ToPort": "1024",
                    "CidrIp": "10.1.50.0/24"
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "udp",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "CidrIp": "0.0.0.0/0"
                }]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": ["NATInstance", "PrivateRouteTable"],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATInstance"
                }
            }
        },
        "BastionServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "AttachGateway",
            "Properties": {
                "GroupDescription": "Security Group for bastion server",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "BastionServerSecurityGroup"
                }, {
                    "Key": "ResourceGroup",
                    "Value": "CloudFormationResource"
                }],
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {
                        "Ref": "BastionSecurityCIDR"
                    }
                }]
            }
        },
        "Bastion": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["NATInstance"],
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI", {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.nano",
                "KeyName": {
                    "Ref": "BastionHostKeyName"
                },
                "NetworkInterfaces": [{
                    "DeviceIndex": "0",
                    "AssociatePublicIpAddress": "true",
                    "SubnetId": {
                        "Ref": "PrivateSubnet1"
                    },
                    "GroupSet": [{
                        "Ref": "BastionServerSecurityGroup"
                    }]
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "Bastion"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n", [
                                "#!/bin/bash",
                                "wget https://raw.githubusercontent.com/fsulib/islandora7x_aws/master/UserData/bastion.sh",
                                "sh bastion.sh"
                            ]
                        ]
                    }
                }
            }
        },
        "Drupal": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI", {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.nano",
                "NetworkInterfaces": [{
                    "DeviceIndex": "0",
                    "AssociatePublicIpAddress": "true",
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    },
                    "GroupSet": [{
                        "Ref": "NATSecurityGroup"
                    }]
                }],
                "SourceDestCheck": "false",
                "Tags": [{
                    "Key": "Name",
                    "Value": "Drupal"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash \n",
                                "export DATABASE_ROOT_USER=", { "Ref" : "DatabaseRootUser" }, "\n",
                                "export DATABASE_ROOT_PASS=", { "Ref" : "DatabaseRootPass" }, "\n",
                                "export DRUPAL_DATABASE_USER=", { "Ref" : "DrupalDatabaseUser" }, "\n",
                                "export DRUPAL_DATABASE_PASS=", { "Ref" : "DrupalDatabasePass" }, "\n",
                                "wget https://raw.githubusercontent.com/fsulib/islandora7x_aws/master/UserData/drupal.sh \n",
                                "sh drupal.sh"
                            ]
                        ]
                    }
                }
            }
        }
        "Fedora": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI", {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.nano",
                "NetworkInterfaces": [{
                    "DeviceIndex": "0",
                    "AssociatePublicIpAddress": "true",
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    },
                    "GroupSet": [{
                        "Ref": "NATSecurityGroup"
                    }]
                }],
                "SourceDestCheck": "false",
                "Tags": [{
                    "Key": "Name",
                    "Value": "Fedora"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash",
                                "export DATABASE_ROOT_USER=", { "Ref" : "DatabaseRootUser" }, "\n",
                                "export DATABASE_ROOT_PASS=", { "Ref" : "DatabaseRootPass" }, "\n",
                                "export FEDORA_DATABASE_USER=", { "Ref" : "FedoraDatabaseUser" }, "\n",
                                "export FEDORA_DATABASE_PASS=", { "Ref" : "FedoraDatabasePass" }, "\n",
                                "export FEDORA_FILTER_USER=", { "Ref" : "FedoraFilterUser" }, "\n",
                                "export FEDORA_FILTER_PASS=", { "Ref" : "FedoraFilterPass" }, "\n",
                                "export TOMCAT_MANAGER_USER=", { "Ref" : "TomcatManagerUser" }, "\n",
                                "export TOMCAT_MANAGER_PASS=", { "Ref" : "TomcatManagerPass" }, "\n",
                                "wget https://raw.githubusercontent.com/fsulib/islandora7x_aws/master/UserData/fedora.sh",
                                "sh fedora.sh"
                            ]
                        ]
                    }
                }
            }
        }
        "Solr": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI", {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.nano",
                "NetworkInterfaces": [{
                    "DeviceIndex": "0",
                    "AssociatePublicIpAddress": "true",
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    },
                    "GroupSet": [{
                        "Ref": "NATSecurityGroup"
                    }]
                }],
                "SourceDestCheck": "false",
                "Tags": [{
                    "Key": "Name",
                    "Value": "Solr"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash\n",
                                "wget https://raw.githubusercontent.com/fsulib/islandora7x_aws/master/UserData/solr.sh\n",
                                "sh solr.sh"
                            ]
                        ]
                    }
                }
            }
        }
    }
}
